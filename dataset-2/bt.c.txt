static void matvec_sub(double ablock[5][5], double avec[5], double bvec[5]);
static void matmul_sub(double ablock[5][5], double bblock[5][5],
		       double cblock[5][5]);
static void binvcrhs(double lhs[5][5], double c[5][5], double r[5]);
static void binvrhs(double lhs[5][5], double r[5]);
	  u[i][j][k][m] 
	  add 
	  add 
	  forcing[i][j][k][m] 
	  ue[i][m] 
	  buf[i][m] 
	cuf[i]   
	buf[i][0] 
	  buf[i][3] * buf[i][3];
	q[i] 
		    buf[i][3]*ue[i][3]);
	forcing[i][j][k][0] 
	  tx2*(ue[ip1][1]-ue[im1][1])+
	  dx1tx1*(ue[ip1][0]-2.0*ue[i][0]+ue[im1][0]);
	forcing[i][j][k][1] 
	  tx2 * ((ue[ip1][1]*buf[ip1][1]+c2*(ue[ip1][4]-q[ip1]))-
		 (ue[im1][1]*buf[im1][1]+c2*(ue[im1][4]-q[im1])))+
	  xxcon1*(buf[ip1][1]-2.0*buf[i][1]+buf[im1][1])+
	  dx2tx1*( ue[ip1][1]-2.0* ue[i][1]+ ue[im1][1]);
	forcing[i][j][k][2] 
	  tx2 * (ue[ip1][2]*buf[ip1][1]-ue[im1][2]*buf[im1][1])+
	  xxcon2*(buf[ip1][2]-2.0*buf[i][2]+buf[im1][2])+
	  dx3tx1*( ue[ip1][2]-2.0* ue[i][2]+ ue[im1][2]);
	forcing[i][j][k][3] 
	  tx2*(ue[ip1][3]*buf[ip1][1]-ue[im1][3]*buf[im1][1])+
	  xxcon2*(buf[ip1][3]-2.0*buf[i][3]+buf[im1][3])+
	  dx4tx1*( ue[ip1][3]-2.0* ue[i][3]+ ue[im1][3]);
	forcing[i][j][k][4] 
	  tx2*(buf[ip1][1]*(c1*ue[ip1][4]-c2*q[ip1])-
	       buf[im1][1]*(c1*ue[im1][4]-c2*q[im1]))+
	  0.5*xxcon3*(buf[ip1][0]-2.0*buf[i][0]+buf[im1][0])+
	  xxcon5*(buf[ip1][4]-2.0*buf[i][4]+buf[im1][4])+
	  dx5tx1*( ue[ip1][4]-2.0* ue[i][4]+ ue[im1][4]);
	forcing[i][j][k][m] 
	  (5.0*ue[i][m] - 4.0*ue[i+1][m] +ue[i+2][m]);
	forcing[i][j][k][m] 
	  (-4.0*ue[i-1][m] + 6.0*ue[i][m] -
	    4.0*ue[i+1][m] +     ue[i+2][m]);
	  forcing[i][j][k][m] 
	    (ue[i-2][m] - 4.0*ue[i-1][m] +
	     6.0*ue[i][m] - 4.0*ue[i+1][m] + ue[i+2][m]);
	forcing[i][j][k][m] 
	  (ue[i-2][m] - 4.0*ue[i-1][m] +
	   6.0*ue[i][m] - 4.0*ue[i+1][m]);
	forcing[i][j][k][m] 
	  (ue[i-2][m] - 4.0*ue[i-1][m] + 5.0*ue[i][m]);
	  ue[j][m] 
	  buf[j][m] 
	cuf[j]   
	buf[j][0] 
	  buf[j][3] * buf[j][3];
	q[j] 
		    buf[j][3]*ue[j][3]);
	forcing[i][j][k][0] 
	  ty2*( ue[jp1][2]-ue[jm1][2] )+
	  dy1ty1*(ue[jp1][0]-2.0*ue[j][0]+ue[jm1][0]);
	forcing[i][j][k][1] 
	  ty2*(ue[jp1][1]*buf[jp1][2]-ue[jm1][1]*buf[jm1][2])+
	  yycon2*(buf[jp1][1]-2.0*buf[j][1]+buf[jm1][1])+
	  dy2ty1*( ue[jp1][1]-2.0* ue[j][1]+ ue[jm1][1]);
	forcing[i][j][k][2] 
	  ty2*((ue[jp1][2]*buf[jp1][2]+c2*(ue[jp1][4]-q[jp1]))-
	       (ue[jm1][2]*buf[jm1][2]+c2*(ue[jm1][4]-q[jm1])))+
	  yycon1*(buf[jp1][2]-2.0*buf[j][2]+buf[jm1][2])+
	  dy3ty1*( ue[jp1][2]-2.0*ue[j][2] +ue[jm1][2]);
	forcing[i][j][k][3] 
	  ty2*(ue[jp1][3]*buf[jp1][2]-ue[jm1][3]*buf[jm1][2])+
	  yycon2*(buf[jp1][3]-2.0*buf[j][3]+buf[jm1][3])+
	  dy4ty1*( ue[jp1][3]-2.0*ue[j][3]+ ue[jm1][3]);
	forcing[i][j][k][4] 
	  ty2*(buf[jp1][2]*(c1*ue[jp1][4]-c2*q[jp1])-
	       buf[jm1][2]*(c1*ue[jm1][4]-c2*q[jm1]))+
	  0.5*yycon3*(buf[jp1][0]-2.0*buf[j][0]+
                      buf[jm1][0])+
	  yycon5*(buf[jp1][4]-2.0*buf[j][4]+buf[jm1][4])+
	  dy5ty1*(ue[jp1][4]-2.0*ue[j][4]+ue[jm1][4]);
	forcing[i][j][k][m] 
	  (5.0*ue[j][m] - 4.0*ue[j+1][m] +ue[j+2][m]);
	forcing[i][j][k][m] 
	  (-4.0*ue[j-1][m] + 6.0*ue[j][m] -
	   4.0*ue[j+1][m] +       ue[j+2][m]);
	  forcing[i][j][k][m] 
	    (ue[j-2][m] - 4.0*ue[j-1][m] +
	     6.0*ue[j][m] - 4.0*ue[j+1][m] + ue[j+2][m]);
	forcing[i][j][k][m] 
	  (ue[j-2][m] - 4.0*ue[j-1][m] +
	   6.0*ue[j][m] - 4.0*ue[j+1][m]);
	forcing[i][j][k][m] 
	  (ue[j-2][m] - 4.0*ue[j-1][m] + 5.0*ue[j][m]);
	  ue[k][m] 
	  buf[k][m] 
	cuf[k]   
	buf[k][0] 
	  buf[k][2] * buf[k][2];
	q[k] 
		    buf[k][3]*ue[k][3]);
	forcing[i][j][k][0] 
	  tz2*( ue[kp1][3]-ue[km1][3] )+
	  dz1tz1*(ue[kp1][0]-2.0*ue[k][0]+ue[km1][0]);
	forcing[i][j][k][1] 
	  tz2 * (ue[kp1][1]*buf[kp1][3]-ue[km1][1]*buf[km1][3])+
	  zzcon2*(buf[kp1][1]-2.0*buf[k][1]+buf[km1][1])+
	  dz2tz1*( ue[kp1][1]-2.0* ue[k][1]+ ue[km1][1]);
	forcing[i][j][k][2] 
	  tz2 * (ue[kp1][2]*buf[kp1][3]-ue[km1][2]*buf[km1][3])+
	  zzcon2*(buf[kp1][2]-2.0*buf[k][2]+buf[km1][2])+
	  dz3tz1*(ue[kp1][2]-2.0*ue[k][2]+ue[km1][2]);
	forcing[i][j][k][3] 
	  tz2 * ((ue[kp1][3]*buf[kp1][3]+c2*(ue[kp1][4]-q[kp1]))-
		 (ue[km1][3]*buf[km1][3]+c2*(ue[km1][4]-q[km1])))+
	  zzcon1*(buf[kp1][3]-2.0*buf[k][3]+buf[km1][3])+
	  dz4tz1*( ue[kp1][3]-2.0*ue[k][3] +ue[km1][3]);
	forcing[i][j][k][4] 
	  tz2 * (buf[kp1][3]*(c1*ue[kp1][4]-c2*q[kp1])-
		 buf[km1][3]*(c1*ue[km1][4]-c2*q[km1]))+
	  0.5*zzcon3*(buf[kp1][0]-2.0*buf[k][0]
                      +buf[km1][0])+
	  zzcon5*(buf[kp1][4]-2.0*buf[k][4]+buf[km1][4])+
	  dz5tz1*( ue[kp1][4]-2.0*ue[k][4]+ ue[km1][4]);
	forcing[i][j][k][m] 
	  (5.0*ue[k][m] - 4.0*ue[k+1][m] +ue[k+2][m]);
	forcing[i][j][k][m] 
	  (-4.0*ue[k-1][m] + 6.0*ue[k][m] -
	   4.0*ue[k+1][m] +       ue[k+2][m]);
	  forcing[i][j][k][m] 
	    (ue[k-2][m] - 4.0*ue[k-1][m] +
	     6.0*ue[k][m] - 4.0*ue[k+1][m] + ue[k+2][m]);
	forcing[i][j][k][m] 
	  (ue[k-2][m] - 4.0*ue[k-1][m] +
	   6.0*ue[k][m] - 4.0*ue[k+1][m]);
	forcing[i][j][k][m] 
	  (ue[k-2][m] - 4.0*ue[k-1][m] + 5.0*ue[k][m]);
	  forcing[i][j][k][m] 
    dtemp[m] 
      xi*(ce[m][1] + xi*(ce[m][4] + xi*(ce[m][7]
					+ xi*ce[m][10]))) +
      eta*(ce[m][2] + eta*(ce[m][5] + eta*(ce[m][8]
					   + eta*ce[m][11])))+
      zeta*(ce[m][3] + zeta*(ce[m][6] + zeta*(ce[m][9] + 
					      zeta*ce[m][12])));
  double xi, eta, zeta, Pface[2][3][5], Pxi, Peta, Pzeta, temp[5];
	  u[i][j][k][m] 
                         &(Pface[ix][0][0]));
                         &Pface[iy][1][0]);
                         &Pface[iz][2][0]);
	  Pxi   
	    (1.0-xi)   * Pface[0][0][m];
	  Peta  
	    (1.0-eta)  * Pface[0][1][m];
	  Pzeta 
	    (1.0-zeta) * Pface[0][2][m];
	  u[i][j][k][m] 
	u[i][j][k][m] 
	u[i][j][k][m] 
	u[i][j][k][m] 
	u[i][j][k][m] 
	u[i][j][k][m] 
	u[i][j][k][m] 
	    lhs[i][j][k][0][m][n] 
	    lhs[i][j][k][1][m][n] 
	    lhs[i][j][k][2][m][n] 
	  lhs[i][j][k][1][m][m] 
	tmp1 
	fjac[ i][ j][ k][0][0] 
	fjac[ i][ j][ k][0][1] 
	fjac[ i][ j][ k][0][2] 
	fjac[ i][ j][ k][0][3] 
	fjac[ i][ j][ k][0][4] 
	fjac[ i][ j][ k][1][0] 
				    u[i][j][k][1])
	  + c2 * 0.50 * (u[i][j][k][1] * u[i][j][k][1]
		       + u[i][j][k][2] * u[i][j][k][2]
		       + u[i][j][k][3] * u[i][j][k][3] ) * tmp2;
	fjac[i][j][k][1][1] 
	  * ( u[i][j][k][1] / u[i][j][k][0] );
	fjac[i][j][k][1][2] 
	fjac[i][j][k][1][3] 
	fjac[i][j][k][1][4] 
	fjac[i][j][k][2][0] 
	fjac[i][j][k][2][1] 
	fjac[i][j][k][2][2] 
	fjac[i][j][k][2][3] 
	fjac[i][j][k][2][4] 
	fjac[i][j][k][3][0] 
	fjac[i][j][k][3][1] 
	fjac[i][j][k][3][2] 
	fjac[i][j][k][3][3] 
	fjac[i][j][k][3][4] 
	fjac[i][j][k][4][0] 
				     + u[i][j][k][2] * u[i][j][k][2]
				     + u[i][j][k][3] * u[i][j][k][3] ) * tmp2
				- c1 * ( u[i][j][k][4] * tmp1 ) )
	  * ( u[i][j][k][1] * tmp1 );
	fjac[i][j][k][4][1] 
	  * (  3.0*u[i][j][k][1]*u[i][j][k][1]
	       + u[i][j][k][2]*u[i][j][k][2]
	       + u[i][j][k][3]*u[i][j][k][3] ) * tmp2;
	fjac[i][j][k][4][2] 
	fjac[i][j][k][4][3] 
	fjac[i][j][k][4][4] 
	njac[i][j][k][0][0] 
	njac[i][j][k][0][1] 
	njac[i][j][k][0][2] 
	njac[i][j][k][0][3] 
	njac[i][j][k][0][4] 
	njac[i][j][k][1][0] 
	njac[i][j][k][1][1] 
	njac[i][j][k][1][2] 
	njac[i][j][k][1][3] 
	njac[i][j][k][1][4] 
	njac[i][j][k][2][0] 
	njac[i][j][k][2][1] 
	njac[i][j][k][2][2] 
	njac[i][j][k][2][3] 
	njac[i][j][k][2][4] 
	njac[i][j][k][3][0] 
	njac[i][j][k][3][1] 
	njac[i][j][k][3][2] 
	njac[i][j][k][3][3] 
	njac[i][j][k][3][4] 
	njac[i][j][k][4][0] 
	  - c1345 ) * tmp3 * (pow2(u[i][j][k][1]))
	  - ( c3c4 - c1345 ) * tmp3 * (pow2(u[i][j][k][2]))
	  - ( c3c4 - c1345 ) * tmp3 * (pow2(u[i][j][k][3]))
	  - c1345 * tmp2 * u[i][j][k][4];
	njac[i][j][k][4][1] 
				- c1345 ) * tmp2 * u[i][j][k][1];
	njac[i][j][k][4][2] 
	njac[i][j][k][4][3] 
	njac[i][j][k][4][4] 
	lhs[i][j][k][AA][0][0] 
	  - tmp1 * njac[i-1][j][k][0][0]
	lhs[i][j][k][AA][0][1] 
	  - tmp1 * njac[i-1][j][k][0][1];
	lhs[i][j][k][AA][0][2] 
	  - tmp1 * njac[i-1][j][k][0][2];
	lhs[i][j][k][AA][0][3] 
	  - tmp1 * njac[i-1][j][k][0][3];
	lhs[i][j][k][AA][0][4] 
	  - tmp1 * njac[i-1][j][k][0][4];
	lhs[i][j][k][AA][1][0] 
	  - tmp1 * njac[i-1][j][k][1][0];
	lhs[i][j][k][AA][1][1] 
	  - tmp1 * njac[i-1][j][k][1][1]
	lhs[i][j][k][AA][1][2] 
	  - tmp1 * njac[i-1][j][k][1][2];
	lhs[i][j][k][AA][1][3] 
	  - tmp1 * njac[i-1][j][k][1][3];
	lhs[i][j][k][AA][1][4] 
	  - tmp1 * njac[i-1][j][k][1][4];
	lhs[i][j][k][AA][2][0] 
	  - tmp1 * njac[i-1][j][k][2][0];
	lhs[i][j][k][AA][2][1] 
	  - tmp1 * njac[i-1][j][k][2][1];
	lhs[i][j][k][AA][2][2] 
	  - tmp1 * njac[i-1][j][k][2][2]
	lhs[i][j][k][AA][2][3] 
	  - tmp1 * njac[i-1][j][k][2][3];
	lhs[i][j][k][AA][2][4] 
	  - tmp1 * njac[i-1][j][k][2][4];
	lhs[i][j][k][AA][3][0] 
	  - tmp1 * njac[i-1][j][k][3][0];
	lhs[i][j][k][AA][3][1] 
	  - tmp1 * njac[i-1][j][k][3][1];
	lhs[i][j][k][AA][3][2] 
	  - tmp1 * njac[i-1][j][k][3][2];
	lhs[i][j][k][AA][3][3] 
	  - tmp1 * njac[i-1][j][k][3][3]
	lhs[i][j][k][AA][3][4] 
	  - tmp1 * njac[i-1][j][k][3][4];
	lhs[i][j][k][AA][4][0] 
	  - tmp1 * njac[i-1][j][k][4][0];
	lhs[i][j][k][AA][4][1] 
	  - tmp1 * njac[i-1][j][k][4][1];
	lhs[i][j][k][AA][4][2] 
	  - tmp1 * njac[i-1][j][k][4][2];
	lhs[i][j][k][AA][4][3] 
	  - tmp1 * njac[i-1][j][k][4][3];
	lhs[i][j][k][AA][4][4] 
	  - tmp1 * njac[i-1][j][k][4][4]
	lhs[i][j][k][BB][0][0] 
	  + tmp1 * 2.0 * njac[i][j][k][0][0]
	lhs[i][j][k][BB][0][1] 
	lhs[i][j][k][BB][0][2] 
	lhs[i][j][k][BB][0][3] 
	lhs[i][j][k][BB][0][4] 
	lhs[i][j][k][BB][1][0] 
	lhs[i][j][k][BB][1][1] 
	  + tmp1 * 2.0 * njac[i][j][k][1][1]
	lhs[i][j][k][BB][1][2] 
	lhs[i][j][k][BB][1][3] 
	lhs[i][j][k][BB][1][4] 
	lhs[i][j][k][BB][2][0] 
	lhs[i][j][k][BB][2][1] 
	lhs[i][j][k][BB][2][2] 
	  + tmp1 * 2.0 * njac[i][j][k][2][2]
	lhs[i][j][k][BB][2][3] 
	lhs[i][j][k][BB][2][4] 
	lhs[i][j][k][BB][3][0] 
	lhs[i][j][k][BB][3][1] 
	lhs[i][j][k][BB][3][2] 
	lhs[i][j][k][BB][3][3] 
	  + tmp1 * 2.0 * njac[i][j][k][3][3]
	lhs[i][j][k][BB][3][4] 
	lhs[i][j][k][BB][4][0] 
	lhs[i][j][k][BB][4][1] 
	lhs[i][j][k][BB][4][2] 
	lhs[i][j][k][BB][4][3] 
	lhs[i][j][k][BB][4][4] 
	  + tmp1 * 2.0 * njac[i][j][k][4][4]
	lhs[i][j][k][CC][0][0] 
	  - tmp1 * njac[i+1][j][k][0][0]
	lhs[i][j][k][CC][0][1] 
	  - tmp1 * njac[i+1][j][k][0][1];
	lhs[i][j][k][CC][0][2] 
	  - tmp1 * njac[i+1][j][k][0][2];
	lhs[i][j][k][CC][0][3] 
	  - tmp1 * njac[i+1][j][k][0][3];
	lhs[i][j][k][CC][0][4] 
	  - tmp1 * njac[i+1][j][k][0][4];
	lhs[i][j][k][CC][1][0] 
	  - tmp1 * njac[i+1][j][k][1][0];
	lhs[i][j][k][CC][1][1] 
	  - tmp1 * njac[i+1][j][k][1][1]
	lhs[i][j][k][CC][1][2] 
	  - tmp1 * njac[i+1][j][k][1][2];
	lhs[i][j][k][CC][1][3] 
	  - tmp1 * njac[i+1][j][k][1][3];
	lhs[i][j][k][CC][1][4] 
	  - tmp1 * njac[i+1][j][k][1][4];
	lhs[i][j][k][CC][2][0] 
	  - tmp1 * njac[i+1][j][k][2][0];
	lhs[i][j][k][CC][2][1] 
	  - tmp1 * njac[i+1][j][k][2][1];
	lhs[i][j][k][CC][2][2] 
	  - tmp1 * njac[i+1][j][k][2][2]
	lhs[i][j][k][CC][2][3] 
	  - tmp1 * njac[i+1][j][k][2][3];
	lhs[i][j][k][CC][2][4] 
	  - tmp1 * njac[i+1][j][k][2][4];
	lhs[i][j][k][CC][3][0] 
	  - tmp1 * njac[i+1][j][k][3][0];
	lhs[i][j][k][CC][3][1] 
	  - tmp1 * njac[i+1][j][k][3][1];
	lhs[i][j][k][CC][3][2] 
	  - tmp1 * njac[i+1][j][k][3][2];
	lhs[i][j][k][CC][3][3] 
	  - tmp1 * njac[i+1][j][k][3][3]
	lhs[i][j][k][CC][3][4] 
	  - tmp1 * njac[i+1][j][k][3][4];
	lhs[i][j][k][CC][4][0] 
	  - tmp1 * njac[i+1][j][k][4][0];
	lhs[i][j][k][CC][4][1] 
	  - tmp1 * njac[i+1][j][k][4][1];
	lhs[i][j][k][CC][4][2] 
	  - tmp1 * njac[i+1][j][k][4][2];
	lhs[i][j][k][CC][4][3] 
	  - tmp1 * njac[i+1][j][k][4][3];
	lhs[i][j][k][CC][4][4] 
	  - tmp1 * njac[i+1][j][k][4][4]
	tmp1 
	fjac[ i][ j][ k][0][0] 
	fjac[ i][ j][ k][0][1] 
	fjac[ i][ j][ k][0][2] 
	fjac[ i][ j][ k][0][3] 
	fjac[ i][ j][ k][0][4] 
	fjac[i][j][k][1][0] 
	fjac[i][j][k][1][1] 
	fjac[i][j][k][1][2] 
	fjac[i][j][k][1][3] 
	fjac[i][j][k][1][4] 
	fjac[i][j][k][2][0] 
	  + 0.50 * c2 * ( (  u[i][j][k][1] * u[i][j][k][1]
			     + u[i][j][k][2] * u[i][j][k][2]
			     + u[i][j][k][3] * u[i][j][k][3] )
	fjac[i][j][k][2][1] 
	fjac[i][j][k][2][2] 
	  *  u[i][j][k][2] * tmp1;
	fjac[i][j][k][2][3] 
	fjac[i][j][k][2][4] 
	fjac[i][j][k][3][0] 
	fjac[i][j][k][3][1] 
	fjac[i][j][k][3][2] 
	fjac[i][j][k][3][3] 
	fjac[i][j][k][3][4] 
	fjac[i][j][k][4][0] 
					+ u[i][j][k][2] * u[i][j][k][2]
					+ u[i][j][k][3] * u[i][j][k][3] )
				- c1 * u[i][j][k][4] * tmp1 ) 
	  * u[i][j][k][2] * tmp1;
	fjac[i][j][k][4][1] 
	fjac[i][j][k][4][2] 
	  * ( (  u[i][j][k][1]*u[i][j][k][1]
		 + 3.0 * u[i][j][k][2]*u[i][j][k][2]
		 + u[i][j][k][3]*u[i][j][k][3] )
	fjac[i][j][k][4][3] 
	fjac[i][j][k][4][4] 
	njac[i][j][k][0][0] 
	njac[i][j][k][0][1] 
	njac[i][j][k][0][2] 
	njac[i][j][k][0][3] 
	njac[i][j][k][0][4] 
	njac[i][j][k][1][0] 
	njac[i][j][k][1][1] 
	njac[i][j][k][1][2] 
	njac[i][j][k][1][3] 
	njac[i][j][k][1][4] 
	njac[i][j][k][2][0] 
	njac[i][j][k][2][1] 
	njac[i][j][k][2][2] 
	njac[i][j][k][2][3] 
	njac[i][j][k][2][4] 
	njac[i][j][k][3][0] 
	njac[i][j][k][3][1] 
	njac[i][j][k][3][2] 
	njac[i][j][k][3][3] 
	njac[i][j][k][3][4] 
	njac[i][j][k][4][0] 
          - c1345 ) * tmp3 * (pow2(u[i][j][k][1]))
	      - c1345 ) * tmp3 * (pow2(u[i][j][k][2]))
	  - ( c3c4 - c1345 ) * tmp3 * (pow2(u[i][j][k][3]))
	  - c1345 * tmp2 * u[i][j][k][4];
	njac[i][j][k][4][1] 
	njac[i][j][k][4][2] 
				- c1345 ) * tmp2 * u[i][j][k][2];
	njac[i][j][k][4][3] 
	njac[i][j][k][4][4] 
	lhs[i][j][k][AA][0][0] 
	  - tmp1 * njac[i][j-1][k][0][0]
	lhs[i][j][k][AA][0][1] 
	  - tmp1 * njac[i][j-1][k][0][1];
	lhs[i][j][k][AA][0][2] 
	  - tmp1 * njac[i][j-1][k][0][2];
	lhs[i][j][k][AA][0][3] 
	  - tmp1 * njac[i][j-1][k][0][3];
	lhs[i][j][k][AA][0][4] 
	  - tmp1 * njac[i][j-1][k][0][4];
	lhs[i][j][k][AA][1][0] 
	  - tmp1 * njac[i][j-1][k][1][0];
	lhs[i][j][k][AA][1][1] 
	  - tmp1 * njac[i][j-1][k][1][1]
	lhs[i][j][k][AA][1][2] 
	  - tmp1 * njac[i][j-1][k][1][2];
	lhs[i][j][k][AA][1][3] 
	  - tmp1 * njac[i][j-1][k][1][3];
	lhs[i][j][k][AA][1][4] 
	  - tmp1 * njac[i][j-1][k][1][4];
	lhs[i][j][k][AA][2][0] 
	  - tmp1 * njac[i][j-1][k][2][0];
	lhs[i][j][k][AA][2][1] 
	  - tmp1 * njac[i][j-1][k][2][1];
	lhs[i][j][k][AA][2][2] 
	  - tmp1 * njac[i][j-1][k][2][2]
	lhs[i][j][k][AA][2][3] 
	  - tmp1 * njac[i][j-1][k][2][3];
	lhs[i][j][k][AA][2][4] 
	  - tmp1 * njac[i][j-1][k][2][4];
	lhs[i][j][k][AA][3][0] 
	  - tmp1 * njac[i][j-1][k][3][0];
	lhs[i][j][k][AA][3][1] 
	  - tmp1 * njac[i][j-1][k][3][1];
	lhs[i][j][k][AA][3][2] 
	  - tmp1 * njac[i][j-1][k][3][2];
	lhs[i][j][k][AA][3][3] 
	  - tmp1 * njac[i][j-1][k][3][3]
	lhs[i][j][k][AA][3][4] 
	  - tmp1 * njac[i][j-1][k][3][4];
	lhs[i][j][k][AA][4][0] 
	  - tmp1 * njac[i][j-1][k][4][0];
	lhs[i][j][k][AA][4][1] 
	  - tmp1 * njac[i][j-1][k][4][1];
	lhs[i][j][k][AA][4][2] 
	  - tmp1 * njac[i][j-1][k][4][2];
	lhs[i][j][k][AA][4][3] 
	  - tmp1 * njac[i][j-1][k][4][3];
	lhs[i][j][k][AA][4][4] 
	  - tmp1 * njac[i][j-1][k][4][4]
	lhs[i][j][k][BB][0][0] 
	  + tmp1 * 2.0 * njac[i][j][k][0][0]
	lhs[i][j][k][BB][0][1] 
	lhs[i][j][k][BB][0][2] 
	lhs[i][j][k][BB][0][3] 
	lhs[i][j][k][BB][0][4] 
	lhs[i][j][k][BB][1][0] 
	lhs[i][j][k][BB][1][1] 
	  + tmp1 * 2.0 * njac[i][j][k][1][1]
	lhs[i][j][k][BB][1][2] 
	lhs[i][j][k][BB][1][3] 
	lhs[i][j][k][BB][1][4] 
	lhs[i][j][k][BB][2][0] 
	lhs[i][j][k][BB][2][1] 
	lhs[i][j][k][BB][2][2] 
	  + tmp1 * 2.0 * njac[i][j][k][2][2]
	lhs[i][j][k][BB][2][3] 
	lhs[i][j][k][BB][2][4] 
	lhs[i][j][k][BB][3][0] 
	lhs[i][j][k][BB][3][1] 
	lhs[i][j][k][BB][3][2] 
	lhs[i][j][k][BB][3][3] 
	  + tmp1 * 2.0 * njac[i][j][k][3][3]
	lhs[i][j][k][BB][3][4] 
	lhs[i][j][k][BB][4][0] 
	lhs[i][j][k][BB][4][1] 
	lhs[i][j][k][BB][4][2] 
	lhs[i][j][k][BB][4][3] 
	lhs[i][j][k][BB][4][4] 
	  + tmp1 * 2.0 * njac[i][j][k][4][4] 
	lhs[i][j][k][CC][0][0] 
	  - tmp1 * njac[i][j+1][k][0][0]
	lhs[i][j][k][CC][0][1] 
	  - tmp1 * njac[i][j+1][k][0][1];
	lhs[i][j][k][CC][0][2] 
	  - tmp1 * njac[i][j+1][k][0][2];
	lhs[i][j][k][CC][0][3] 
	  - tmp1 * njac[i][j+1][k][0][3];
	lhs[i][j][k][CC][0][4] 
	  - tmp1 * njac[i][j+1][k][0][4];
	lhs[i][j][k][CC][1][0] 
	  - tmp1 * njac[i][j+1][k][1][0];
	lhs[i][j][k][CC][1][1] 
	  - tmp1 * njac[i][j+1][k][1][1]
	lhs[i][j][k][CC][1][2] 
	  - tmp1 * njac[i][j+1][k][1][2];
	lhs[i][j][k][CC][1][3] 
	  - tmp1 * njac[i][j+1][k][1][3];
	lhs[i][j][k][CC][1][4] 
	  - tmp1 * njac[i][j+1][k][1][4];
	lhs[i][j][k][CC][2][0] 
	  - tmp1 * njac[i][j+1][k][2][0];
	lhs[i][j][k][CC][2][1] 
	  - tmp1 * njac[i][j+1][k][2][1];
	lhs[i][j][k][CC][2][2] 
	  - tmp1 * njac[i][j+1][k][2][2]
	lhs[i][j][k][CC][2][3] 
	  - tmp1 * njac[i][j+1][k][2][3];
	lhs[i][j][k][CC][2][4] 
	  - tmp1 * njac[i][j+1][k][2][4];
	lhs[i][j][k][CC][3][0] 
	  - tmp1 * njac[i][j+1][k][3][0];
	lhs[i][j][k][CC][3][1] 
	  - tmp1 * njac[i][j+1][k][3][1];
	lhs[i][j][k][CC][3][2] 
	  - tmp1 * njac[i][j+1][k][3][2];
	lhs[i][j][k][CC][3][3] 
	  - tmp1 * njac[i][j+1][k][3][3]
	lhs[i][j][k][CC][3][4] 
	  - tmp1 * njac[i][j+1][k][3][4];
	lhs[i][j][k][CC][4][0] 
	  - tmp1 * njac[i][j+1][k][4][0];
	lhs[i][j][k][CC][4][1] 
	  - tmp1 * njac[i][j+1][k][4][1];
	lhs[i][j][k][CC][4][2] 
	  - tmp1 * njac[i][j+1][k][4][2];
	lhs[i][j][k][CC][4][3] 
	  - tmp1 * njac[i][j+1][k][4][3];
	lhs[i][j][k][CC][4][4] 
	  - tmp1 * njac[i][j+1][k][4][4]
	tmp1 
	fjac[i][j][k][0][0] 
	fjac[i][j][k][0][1] 
	fjac[i][j][k][0][2] 
	fjac[i][j][k][0][3] 
	fjac[i][j][k][0][4] 
	fjac[i][j][k][1][0] 
	fjac[i][j][k][1][1] 
	fjac[i][j][k][1][2] 
	fjac[i][j][k][1][3] 
	fjac[i][j][k][1][4] 
	fjac[i][j][k][2][0] 
	fjac[i][j][k][2][1] 
	fjac[i][j][k][2][2] 
	fjac[i][j][k][2][3] 
	fjac[i][j][k][2][4] 
	fjac[i][j][k][3][0] 
	  + 0.50 * c2 * ( (  u[i][j][k][1] * u[i][j][k][1]
			     + u[i][j][k][2] * u[i][j][k][2]
			     + u[i][j][k][3] * u[i][j][k][3] ) * tmp2 );
	fjac[i][j][k][3][1] 
	fjac[i][j][k][3][2] 
	fjac[i][j][k][3][3] 
	  *  u[i][j][k][3] * tmp1;
	fjac[i][j][k][3][4] 
	fjac[i][j][k][4][0] 
					+ u[i][j][k][2] * u[i][j][k][2]
					+ u[i][j][k][3] * u[i][j][k][3] )
				- c1 * ( u[i][j][k][4] * tmp1 ) )
	  * ( u[i][j][k][3] * tmp1 );
	fjac[i][j][k][4][1] 
	fjac[i][j][k][4][2] 
	fjac[i][j][k][4][3] 
	  * ( (  u[i][j][k][1]*u[i][j][k][1]
		 + u[i][j][k][2]*u[i][j][k][2]
		 + 3.0*u[i][j][k][3]*u[i][j][k][3] )
	fjac[i][j][k][4][4] 
	njac[i][j][k][0][0] 
	njac[i][j][k][0][1] 
	njac[i][j][k][0][2] 
	njac[i][j][k][0][3] 
	njac[i][j][k][0][4] 
	njac[i][j][k][1][0] 
	njac[i][j][k][1][1] 
	njac[i][j][k][1][2] 
	njac[i][j][k][1][3] 
	njac[i][j][k][1][4] 
	njac[i][j][k][2][0] 
	njac[i][j][k][2][1] 
	njac[i][j][k][2][2] 
	njac[i][j][k][2][3] 
	njac[i][j][k][2][4] 
	njac[i][j][k][3][0] 
	njac[i][j][k][3][1] 
	njac[i][j][k][3][2] 
	njac[i][j][k][3][3] 
	njac[i][j][k][3][4] 
	njac[i][j][k][4][0] 
	  - c1345 ) * tmp3 * (pow2(u[i][j][k][1]))
	  - ( c3c4 - c1345 ) * tmp3 * (pow2(u[i][j][k][2]))
	      - c1345 ) * tmp3 * (pow2(u[i][j][k][3]))
	  - c1345 * tmp2 * u[i][j][k][4];
	njac[i][j][k][4][1] 
	njac[i][j][k][4][2] 
	njac[i][j][k][4][3] 
				- c1345 ) * tmp2 * u[i][j][k][3];
	njac[i][j][k][4][4] 
	lhs[i][j][k][AA][0][0] 
	  - tmp1 * njac[i][j][k-1][0][0]
	lhs[i][j][k][AA][0][1] 
	  - tmp1 * njac[i][j][k-1][0][1];
	lhs[i][j][k][AA][0][2] 
	  - tmp1 * njac[i][j][k-1][0][2];
	lhs[i][j][k][AA][0][3] 
	  - tmp1 * njac[i][j][k-1][0][3];
	lhs[i][j][k][AA][0][4] 
	  - tmp1 * njac[i][j][k-1][0][4];
	lhs[i][j][k][AA][1][0] 
	  - tmp1 * njac[i][j][k-1][1][0];
	lhs[i][j][k][AA][1][1] 
	  - tmp1 * njac[i][j][k-1][1][1]
	lhs[i][j][k][AA][1][2] 
	  - tmp1 * njac[i][j][k-1][1][2];
	lhs[i][j][k][AA][1][3] 
	  - tmp1 * njac[i][j][k-1][1][3];
	lhs[i][j][k][AA][1][4] 
	  - tmp1 * njac[i][j][k-1][1][4];
	lhs[i][j][k][AA][2][0] 
	  - tmp1 * njac[i][j][k-1][2][0];
	lhs[i][j][k][AA][2][1] 
	  - tmp1 * njac[i][j][k-1][2][1];
	lhs[i][j][k][AA][2][2] 
	  - tmp1 * njac[i][j][k-1][2][2]
	lhs[i][j][k][AA][2][3] 
	  - tmp1 * njac[i][j][k-1][2][3];
	lhs[i][j][k][AA][2][4] 
	  - tmp1 * njac[i][j][k-1][2][4];
	lhs[i][j][k][AA][3][0] 
	  - tmp1 * njac[i][j][k-1][3][0];
	lhs[i][j][k][AA][3][1] 
	  - tmp1 * njac[i][j][k-1][3][1];
	lhs[i][j][k][AA][3][2] 
	  - tmp1 * njac[i][j][k-1][3][2];
	lhs[i][j][k][AA][3][3] 
	  - tmp1 * njac[i][j][k-1][3][3]
	lhs[i][j][k][AA][3][4] 
	  - tmp1 * njac[i][j][k-1][3][4];
	lhs[i][j][k][AA][4][0] 
	  - tmp1 * njac[i][j][k-1][4][0];
	lhs[i][j][k][AA][4][1] 
	  - tmp1 * njac[i][j][k-1][4][1];
	lhs[i][j][k][AA][4][2] 
	  - tmp1 * njac[i][j][k-1][4][2];
	lhs[i][j][k][AA][4][3] 
	  - tmp1 * njac[i][j][k-1][4][3];
	lhs[i][j][k][AA][4][4] 
	  - tmp1 * njac[i][j][k-1][4][4]
	lhs[i][j][k][BB][0][0] 
	  + tmp1 * 2.0 * njac[i][j][k][0][0]
	lhs[i][j][k][BB][0][1] 
	lhs[i][j][k][BB][0][2] 
	lhs[i][j][k][BB][0][3] 
	lhs[i][j][k][BB][0][4] 
	lhs[i][j][k][BB][1][0] 
	lhs[i][j][k][BB][1][1] 
	  + tmp1 * 2.0 * njac[i][j][k][1][1]
	lhs[i][j][k][BB][1][2] 
	lhs[i][j][k][BB][1][3] 
	lhs[i][j][k][BB][1][4] 
	lhs[i][j][k][BB][2][0] 
	lhs[i][j][k][BB][2][1] 
	lhs[i][j][k][BB][2][2] 
	  + tmp1 * 2.0 * njac[i][j][k][2][2]
	lhs[i][j][k][BB][2][3] 
	lhs[i][j][k][BB][2][4] 
	lhs[i][j][k][BB][3][0] 
	lhs[i][j][k][BB][3][1] 
	lhs[i][j][k][BB][3][2] 
	lhs[i][j][k][BB][3][3] 
	  + tmp1 * 2.0 * njac[i][j][k][3][3]
	lhs[i][j][k][BB][3][4] 
	lhs[i][j][k][BB][4][0] 
	lhs[i][j][k][BB][4][1] 
	lhs[i][j][k][BB][4][2] 
	lhs[i][j][k][BB][4][3] 
	lhs[i][j][k][BB][4][4] 
	  + tmp1 * 2.0 * njac[i][j][k][4][4]
	lhs[i][j][k][CC][0][0] 
	  - tmp1 * njac[i][j][k+1][0][0]
	lhs[i][j][k][CC][0][1] 
	  - tmp1 * njac[i][j][k+1][0][1];
	lhs[i][j][k][CC][0][2] 
	  - tmp1 * njac[i][j][k+1][0][2];
	lhs[i][j][k][CC][0][3] 
	  - tmp1 * njac[i][j][k+1][0][3];
	lhs[i][j][k][CC][0][4] 
	  - tmp1 * njac[i][j][k+1][0][4];
	lhs[i][j][k][CC][1][0] 
	  - tmp1 * njac[i][j][k+1][1][0];
	lhs[i][j][k][CC][1][1] 
	  - tmp1 * njac[i][j][k+1][1][1]
	lhs[i][j][k][CC][1][2] 
	  - tmp1 * njac[i][j][k+1][1][2];
	lhs[i][j][k][CC][1][3] 
	  - tmp1 * njac[i][j][k+1][1][3];
	lhs[i][j][k][CC][1][4] 
	  - tmp1 * njac[i][j][k+1][1][4];
	lhs[i][j][k][CC][2][0] 
	  - tmp1 * njac[i][j][k+1][2][0];
	lhs[i][j][k][CC][2][1] 
	  - tmp1 * njac[i][j][k+1][2][1];
	lhs[i][j][k][CC][2][2] 
	  - tmp1 * njac[i][j][k+1][2][2]
	lhs[i][j][k][CC][2][3] 
	  - tmp1 * njac[i][j][k+1][2][3];
	lhs[i][j][k][CC][2][4] 
	  - tmp1 * njac[i][j][k+1][2][4];
	lhs[i][j][k][CC][3][0] 
	  - tmp1 * njac[i][j][k+1][3][0];
	lhs[i][j][k][CC][3][1] 
	  - tmp1 * njac[i][j][k+1][3][1];
	lhs[i][j][k][CC][3][2] 
	  - tmp1 * njac[i][j][k+1][3][2];
	lhs[i][j][k][CC][3][3] 
	  - tmp1 * njac[i][j][k+1][3][3]
	lhs[i][j][k][CC][3][4] 
	  - tmp1 * njac[i][j][k+1][3][4];
	lhs[i][j][k][CC][4][0] 
	  - tmp1 * njac[i][j][k+1][4][0];
	lhs[i][j][k][CC][4][1] 
	  - tmp1 * njac[i][j][k+1][4][1];
	lhs[i][j][k][CC][4][2] 
	  - tmp1 * njac[i][j][k+1][4][2];
	lhs[i][j][k][CC][4][3] 
	  - tmp1 * njac[i][j][k+1][4][3];
	lhs[i][j][k][CC][4][4] 
	  - tmp1 * njac[i][j][k+1][4][4]
	rho_inv 
	rho_i[i][j][k] 
	us[i][j][k] 
	vs[i][j][k] 
	ws[i][j][k] 
	square[i][j][k] 
				 u[i][j][k][2]*u[i][j][k][2] +
				 u[i][j][k][3]*u[i][j][k][3] ) * rho_inv;
	qs[i][j][k] 
	  rhs[i][j][k][m] 
	uijk 
	up1  
	um1  
	rhs[i][j][k][0] 
	  (u[i+1][j][k][0] - 2.0*u[i][j][k][0] + 
	   u[i-1][j][k][0]) -
	  tx2 * (u[i+1][j][k][1] - u[i-1][j][k][1]);
	rhs[i][j][k][1] 
	  (u[i+1][j][k][1] - 2.0*u[i][j][k][1] + 
	   u[i-1][j][k][1]) +
	  tx2 * (u[i+1][j][k][1]*up1 - 
		 u[i-1][j][k][1]*um1 +
		 (u[i+1][j][k][4]- square[i+1][j][k]-
		  u[i-1][j][k][4]+ square[i-1][j][k])*
	rhs[i][j][k][2] 
	  (u[i+1][j][k][2] - 2.0*u[i][j][k][2] +
	   u[i-1][j][k][2]) +
	  xxcon2 * (vs[i+1][j][k] - 2.0*vs[i][j][k] +
		    vs[i-1][j][k]) -
	  tx2 * (u[i+1][j][k][2]*up1 - 
		 u[i-1][j][k][2]*um1);
	rhs[i][j][k][3] 
	  (u[i+1][j][k][3] - 2.0*u[i][j][k][3] +
	   u[i-1][j][k][3]) +
	  xxcon2 * (ws[i+1][j][k] - 2.0*ws[i][j][k] +
		    ws[i-1][j][k]) -
	  tx2 * (u[i+1][j][k][3]*up1 - 
		 u[i-1][j][k][3]*um1);
	rhs[i][j][k][4] 
	  (u[i+1][j][k][4] - 2.0*u[i][j][k][4] +
	   u[i-1][j][k][4]) +
	  xxcon3 * (qs[i+1][j][k] - 2.0*qs[i][j][k] +
		    qs[i-1][j][k]) +
	  xxcon5 * (u[i+1][j][k][4]*rho_i[i+1][j][k] - 
		    2.0*u[i][j][k][4]*rho_i[i][j][k] +
		    u[i-1][j][k][4]*rho_i[i-1][j][k]) -
	  tx2 * ( (c1*u[i+1][j][k][4] - 
		   c2*square[i+1][j][k])*up1 -
		  (c1*u[i-1][j][k][4] - 
		   c2*square[i-1][j][k])*um1 );
	rhs[i][j][k][m] 
	  ( 5.0*u[i][j][k][m] - 4.0*u[i+1][j][k][m] +
	    u[i+2][j][k][m]);
	rhs[i][j][k][m] 
	  (-4.0*u[i-1][j][k][m] + 6.0*u[i][j][k][m] -
	   4.0*u[i+1][j][k][m] + u[i+2][j][k][m]);
	  rhs[i][j][k][m] 
	    (  u[i-2][j][k][m] - 4.0*u[i-1][j][k][m] + 
	       6.0*u[i][j][k][m] - 4.0*u[i+1][j][k][m] + 
	       u[i+2][j][k][m] );
	rhs[i][j][k][m] 
	  ( u[i-2][j][k][m] - 4.0*u[i-1][j][k][m] + 
	    6.0*u[i][j][k][m] - 4.0*u[i+1][j][k][m] );
	rhs[i][j][k][m] 
	  ( u[i-2][j][k][m] - 4.*u[i-1][j][k][m] +
	    5.0*u[i][j][k][m] );
	vijk 
	vp1  
	vm1  
	rhs[i][j][k][0] 
	  (u[i][j+1][k][0] - 2.0*u[i][j][k][0] + 
	   u[i][j-1][k][0]) -
	  ty2 * (u[i][j+1][k][2] - u[i][j-1][k][2]);
	rhs[i][j][k][1] 
	  (u[i][j+1][k][1] - 2.0*u[i][j][k][1] + 
	   u[i][j-1][k][1]) +
	  yycon2 * (us[i][j+1][k] - 2.0*us[i][j][k] + 
		    us[i][j-1][k]) -
	  ty2 * (u[i][j+1][k][1]*vp1 - 
		 u[i][j-1][k][1]*vm1);
	rhs[i][j][k][2] 
	  (u[i][j+1][k][2] - 2.0*u[i][j][k][2] + 
	   u[i][j-1][k][2]) +
	  ty2 * (u[i][j+1][k][2]*vp1 - 
		 u[i][j-1][k][2]*vm1 +
		 (u[i][j+1][k][4] - square[i][j+1][k] - 
		  u[i][j-1][k][4] + square[i][j-1][k])
	rhs[i][j][k][3] 
	  (u[i][j+1][k][3] - 2.0*u[i][j][k][3] + 
	   u[i][j-1][k][3]) +
	  yycon2 * (ws[i][j+1][k] - 2.0*ws[i][j][k] + 
		    ws[i][j-1][k]) -
	  ty2 * (u[i][j+1][k][3]*vp1 - 
		 u[i][j-1][k][3]*vm1);
	rhs[i][j][k][4] 
	  (u[i][j+1][k][4] - 2.0*u[i][j][k][4] + 
	   u[i][j-1][k][4]) +
	  yycon3 * (qs[i][j+1][k] - 2.0*qs[i][j][k] + 
		    qs[i][j-1][k]) +
	  yycon5 * (u[i][j+1][k][4]*rho_i[i][j+1][k] - 
		    2.0*u[i][j][k][4]*rho_i[i][j][k] +
		    u[i][j-1][k][4]*rho_i[i][j-1][k]) -
	  ty2 * ((c1*u[i][j+1][k][4] - 
		  c2*square[i][j+1][k]) * vp1 -
		 (c1*u[i][j-1][k][4] - 
		  c2*square[i][j-1][k]) * vm1);
	rhs[i][j][k][m] 
	  ( 5.0*u[i][j][k][m] - 4.0*u[i][j+1][k][m] +
	    u[i][j+2][k][m]);
	rhs[i][j][k][m] 
	  (-4.0*u[i][j-1][k][m] + 6.0*u[i][j][k][m] -
	   4.0*u[i][j+1][k][m] + u[i][j+2][k][m]);
	  rhs[i][j][k][m] 
	    (  u[i][j-2][k][m] - 4.0*u[i][j-1][k][m] + 
	       6.0*u[i][j][k][m] - 4.0*u[i][j+1][k][m] + 
	       u[i][j+2][k][m] );
	rhs[i][j][k][m] 
	  ( u[i][j-2][k][m] - 4.0*u[i][j-1][k][m] + 
	    6.0*u[i][j][k][m] - 4.0*u[i][j+1][k][m] );
	rhs[i][j][k][m] 
	  ( u[i][j-2][k][m] - 4.*u[i][j-1][k][m] +
	    5.*u[i][j][k][m] );
	wijk 
	wp1  
	wm1  
	rhs[i][j][k][0] 
	  (u[i][j][k+1][0] - 2.0*u[i][j][k][0] + 
	   u[i][j][k-1][0]) -
	  tz2 * (u[i][j][k+1][3] - u[i][j][k-1][3]);
	rhs[i][j][k][1] 
	  (u[i][j][k+1][1] - 2.0*u[i][j][k][1] + 
	   u[i][j][k-1][1]) +
	  zzcon2 * (us[i][j][k+1] - 2.0*us[i][j][k] + 
		    us[i][j][k-1]) -
	  tz2 * (u[i][j][k+1][1]*wp1 - 
		 u[i][j][k-1][1]*wm1);
	rhs[i][j][k][2] 
	  (u[i][j][k+1][2] - 2.0*u[i][j][k][2] + 
	   u[i][j][k-1][2]) +
	  zzcon2 * (vs[i][j][k+1] - 2.0*vs[i][j][k] + 
		    vs[i][j][k-1]) -
	  tz2 * (u[i][j][k+1][2]*wp1 - 
		 u[i][j][k-1][2]*wm1);
	rhs[i][j][k][3] 
	  (u[i][j][k+1][3] - 2.0*u[i][j][k][3] + 
	   u[i][j][k-1][3]) +
	  tz2 * (u[i][j][k+1][3]*wp1 - 
		 u[i][j][k-1][3]*wm1 +
		 (u[i][j][k+1][4] - square[i][j][k+1] - 
		  u[i][j][k-1][4] + square[i][j][k-1])
	rhs[i][j][k][4] 
	  (u[i][j][k+1][4] - 2.0*u[i][j][k][4] + 
	   u[i][j][k-1][4]) +
	  zzcon3 * (qs[i][j][k+1] - 2.0*qs[i][j][k] + 
		    qs[i][j][k-1]) +
	  zzcon5 * (u[i][j][k+1][4]*rho_i[i][j][k+1] - 
		    2.0*u[i][j][k][4]*rho_i[i][j][k] +
		    u[i][j][k-1][4]*rho_i[i][j][k-1]) -
	  tz2 * ( (c1*u[i][j][k+1][4] - 
		   c2*square[i][j][k+1])*wp1 -
		  (c1*u[i][j][k-1][4] - 
		   c2*square[i][j][k-1])*wm1);
	rhs[i][j][k][m] 
	  ( 5.0*u[i][j][k][m] - 4.0*u[i][j][k+1][m] +
	    u[i][j][k+2][m]);
	rhs[i][j][k][m] 
	  (-4.0*u[i][j][k-1][m] + 6.0*u[i][j][k][m] -
	   4.0*u[i][j][k+1][m] + u[i][j][k+2][m]);
	  rhs[i][j][k][m] 
	    (  u[i][j][k-2][m] - 4.0*u[i][j][k-1][m] + 
	       6.0*u[i][j][k][m] - 4.0*u[i][j][k+1][m] + 
	       u[i][j][k+2][m] );
	rhs[i][j][k][m] 
	  ( u[i][j][k-2][m] - 4.0*u[i][j][k-1][m] + 
	    6.0*u[i][j][k][m] - 4.0*u[i][j][k+1][m] );
	rhs[i][j][k][m] 
	  ( u[i][j][k-2][m] - 4.0*u[i][j][k-1][m] +
	    5.0*u[i][j][k][m] );
	  rhs[i][j][k][m] 
  ce[0][0]  
  ce[0][1]  
  ce[0][2]  
  ce[0][3]  
  ce[0][4]  
  ce[0][5]  
  ce[0][6]  
  ce[0][7]  
  ce[0][8]  
  ce[0][9]  
  ce[0][10] 
  ce[0][11] 
  ce[0][12] 
  ce[1][0]  
  ce[1][1]  
  ce[1][2]  
  ce[1][3]  
  ce[1][4]  
  ce[1][5]  
  ce[1][6]  
  ce[1][7]  
  ce[1][8]  
  ce[1][9]  
  ce[1][10] 
  ce[1][11] 
  ce[1][12] 
  ce[2][0]  
  ce[2][1]  
  ce[2][2]  
  ce[2][3]  
  ce[2][4]  
  ce[2][5]  
  ce[2][6]  
  ce[2][7]  
  ce[2][8]  
  ce[2][9]  
  ce[2][10] 
  ce[2][11] 
  ce[2][12] 
  ce[3][0]  
  ce[3][1]  
  ce[3][2]  
  ce[3][3]  
  ce[3][4]  
  ce[3][5]  
  ce[3][6]  
  ce[3][7]  
  ce[3][8]  
  ce[3][9]  
  ce[3][10] 
  ce[3][11] 
  ce[3][12] 
  ce[4][0]  
  ce[4][1]  
  ce[4][2]  
  ce[4][3]  
  ce[4][4]  
  ce[4][5]  
  ce[4][6]  
  ce[4][7]  
  ce[4][8]  
  ce[4][9]  
  ce[4][10] 
  ce[4][11] 
  ce[4][12] 
	    rhs[i][j][k][m] 
	      - lhs[i][j][k][CC][m][n]*rhs[i+1][j][k][n];
      binvcrhs( lhs[0][j][k][BB],
		lhs[0][j][k][CC],
		rhs[0][j][k] );
	matvec_sub(lhs[i][j][k][AA],
		   rhs[i-1][j][k], rhs[i][j][k]);
	matmul_sub(lhs[i][j][k][AA],
		   lhs[i-1][j][k][CC],
		   lhs[i][j][k][BB]);
	binvcrhs( lhs[i][j][k][BB],
		  lhs[i][j][k][CC],
		  rhs[i][j][k] );
      matvec_sub(lhs[isize][j][k][AA],
		 rhs[isize-1][j][k], rhs[isize][j][k]);
      matmul_sub(lhs[isize][j][k][AA],
		 lhs[isize-1][j][k][CC],
		 lhs[isize][j][k][BB]);
      binvrhs( lhs[i][j][k][BB],
	       rhs[i][j][k] );
static void matvec_sub(double ablock[5][5], double avec[5], double bvec[5]) {
    bvec[i] 
      - ablock[i][1]*avec[1]
      - ablock[i][2]*avec[2]
      - ablock[i][3]*avec[3]
      - ablock[i][4]*avec[4];
static void matmul_sub(double ablock[5][5], double bblock[5][5],
		       double cblock[5][5]) {
    cblock[0][j] 
      - ablock[0][1]*bblock[1][j]
      - ablock[0][2]*bblock[2][j]
      - ablock[0][3]*bblock[3][j]
      - ablock[0][4]*bblock[4][j];
    cblock[1][j] 
      - ablock[1][1]*bblock[1][j]
      - ablock[1][2]*bblock[2][j]
      - ablock[1][3]*bblock[3][j]
      - ablock[1][4]*bblock[4][j];
    cblock[2][j] 
      - ablock[2][1]*bblock[1][j]
      - ablock[2][2]*bblock[2][j]
      - ablock[2][3]*bblock[3][j]
      - ablock[2][4]*bblock[4][j];
    cblock[3][j] 
      - ablock[3][1]*bblock[1][j]
      - ablock[3][2]*bblock[2][j]
      - ablock[3][3]*bblock[3][j]
      - ablock[3][4]*bblock[4][j];
    cblock[4][j] 
      - ablock[4][1]*bblock[1][j]
      - ablock[4][2]*bblock[2][j]
      - ablock[4][3]*bblock[3][j]
      - ablock[4][4]*bblock[4][j];
static void binvcrhs(double lhs[5][5], double c[5][5], double r[5]) {
  pivot 
  lhs[0][1] 
  lhs[0][2] 
  lhs[0][3] 
  lhs[0][4] 
  c[0][0] 
  c[0][1] 
  c[0][2] 
  c[0][3] 
  c[0][4] 
  coeff 
  lhs[1][1]
  lhs[1][2]
  lhs[1][3]
  lhs[1][4]
  c[1][0] 
  c[1][1] 
  c[1][2] 
  c[1][3] 
  c[1][4] 
  coeff 
  lhs[2][1]
  lhs[2][2]
  lhs[2][3]
  lhs[2][4]
  c[2][0] 
  c[2][1] 
  c[2][2] 
  c[2][3] 
  c[2][4] 
  coeff 
  lhs[3][1]
  lhs[3][2]
  lhs[3][3]
  lhs[3][4]
  c[3][0] 
  c[3][1] 
  c[3][2] 
  c[3][3] 
  c[3][4] 
  coeff 
  lhs[4][1]
  lhs[4][2]
  lhs[4][3]
  lhs[4][4]
  c[4][0] 
  c[4][1] 
  c[4][2] 
  c[4][3] 
  c[4][4] 
  pivot 
  lhs[1][2] 
  lhs[1][3] 
  lhs[1][4] 
  c[1][0] 
  c[1][1] 
  c[1][2] 
  c[1][3] 
  c[1][4] 
  coeff 
  lhs[0][2]
  lhs[0][3]
  lhs[0][4]
  c[0][0] 
  c[0][1] 
  c[0][2] 
  c[0][3] 
  c[0][4] 
  coeff 
  lhs[2][2]
  lhs[2][3]
  lhs[2][4]
  c[2][0] 
  c[2][1] 
  c[2][2] 
  c[2][3] 
  c[2][4] 
  coeff 
  lhs[3][2]
  lhs[3][3]
  lhs[3][4]
  c[3][0] 
  c[3][1] 
  c[3][2] 
  c[3][3] 
  c[3][4] 
  coeff 
  lhs[4][2]
  lhs[4][3]
  lhs[4][4]
  c[4][0] 
  c[4][1] 
  c[4][2] 
  c[4][3] 
  c[4][4] 
  pivot 
  lhs[2][3] 
  lhs[2][4] 
  c[2][0] 
  c[2][1] 
  c[2][2] 
  c[2][3] 
  c[2][4] 
  coeff 
  lhs[0][3]
  lhs[0][4]
  c[0][0] 
  c[0][1] 
  c[0][2] 
  c[0][3] 
  c[0][4] 
  coeff 
  lhs[1][3]
  lhs[1][4]
  c[1][0] 
  c[1][1] 
  c[1][2] 
  c[1][3] 
  c[1][4] 
  coeff 
  lhs[3][3]
  lhs[3][4]
  c[3][0] 
  c[3][1] 
  c[3][2] 
  c[3][3] 
  c[3][4] 
  coeff 
  lhs[4][3]
  lhs[4][4]
  c[4][0] 
  c[4][1] 
  c[4][2] 
  c[4][3] 
  c[4][4] 
  pivot 
  lhs[3][4] 
  c[3][0] 
  c[3][1] 
  c[3][2] 
  c[3][3] 
  c[3][4] 
  coeff 
  lhs[0][4]
  c[0][0] 
  c[0][1] 
  c[0][2] 
  c[0][3] 
  c[0][4] 
  coeff 
  lhs[1][4]
  c[1][0] 
  c[1][1] 
  c[1][2] 
  c[1][3] 
  c[1][4] 
  coeff 
  lhs[2][4]
  c[2][0] 
  c[2][1] 
  c[2][2] 
  c[2][3] 
  c[2][4] 
  coeff 
  lhs[4][4]
  c[4][0] 
  c[4][1] 
  c[4][2] 
  c[4][3] 
  c[4][4] 
  pivot 
  c[4][0] 
  c[4][1] 
  c[4][2] 
  c[4][3] 
  c[4][4] 
  coeff 
  c[0][0] 
  c[0][1] 
  c[0][2] 
  c[0][3] 
  c[0][4] 
  coeff 
  c[1][0] 
  c[1][1] 
  c[1][2] 
  c[1][3] 
  c[1][4] 
  coeff 
  c[2][0] 
  c[2][1] 
  c[2][2] 
  c[2][3] 
  c[2][4] 
  coeff 
  c[3][0] 
  c[3][1] 
  c[3][2] 
  c[3][3] 
  c[3][4] 
static void binvrhs( double lhs[5][5], double r[5] ) {
  pivot 
  lhs[0][1] 
  lhs[0][2] 
  lhs[0][3] 
  lhs[0][4] 
  coeff 
  lhs[1][1]
  lhs[1][2]
  lhs[1][3]
  lhs[1][4]
  coeff 
  lhs[2][1]
  lhs[2][2]
  lhs[2][3]
  lhs[2][4]
  coeff 
  lhs[3][1]
  lhs[3][2]
  lhs[3][3]
  lhs[3][4]
  coeff 
  lhs[4][1]
  lhs[4][2]
  lhs[4][3]
  lhs[4][4]
  pivot 
  lhs[1][2] 
  lhs[1][3] 
  lhs[1][4] 
  coeff 
  lhs[0][2]
  lhs[0][3]
  lhs[0][4]
  coeff 
  lhs[2][2]
  lhs[2][3]
  lhs[2][4]
  coeff 
  lhs[3][2]
  lhs[3][3]
  lhs[3][4]
  coeff 
  lhs[4][2]
  lhs[4][3]
  lhs[4][4]
  pivot 
  lhs[2][3] 
  lhs[2][4] 
  coeff 
  lhs[0][3]
  lhs[0][4]
  coeff 
  lhs[1][3]
  lhs[1][4]
  coeff 
  lhs[3][3]
  lhs[3][4]
  coeff 
  lhs[4][3]
  lhs[4][4]
  pivot 
  lhs[3][4] 
  coeff 
  lhs[0][4]
  coeff 
  lhs[1][4]
  coeff 
  lhs[2][4]
  coeff 
  lhs[4][4]
  pivot 
  coeff 
  coeff 
  coeff 
  coeff 
c     the block-tridiagonal matrix into an upper triangular matrix][ 
c     back solve: if last cell][ then generate U(jsize)
	    rhs[i][j][k][m] 
	      - lhs[i][j][k][CC][m][n]*rhs[i][j+1][k][n];
      binvcrhs( lhs[i][0][k][BB],
		lhs[i][0][k][CC],
		rhs[i][0][k] );
	matvec_sub(lhs[i][j][k][AA],
		   rhs[i][j-1][k], rhs[i][j][k]);
	matmul_sub(lhs[i][j][k][AA],
		   lhs[i][j-1][k][CC],
		   lhs[i][j][k][BB]);
	binvcrhs( lhs[i][j][k][BB],
		  lhs[i][j][k][CC],
		  rhs[i][j][k] );
      matvec_sub(lhs[i][jsize][k][AA],
		 rhs[i][jsize-1][k], rhs[i][jsize][k]);
      matmul_sub(lhs[i][jsize][k][AA],
		 lhs[i][jsize-1][k][CC],
		 lhs[i][jsize][k][BB]);
      binvrhs( lhs[i][jsize][k][BB],
	       rhs[i][jsize][k] );
	    rhs[i][j][k][m] 
	      - lhs[i][j][k][CC][m][n]*rhs[i][j][k+1][n];
      binvcrhs( lhs[i][j][0][BB],
		lhs[i][j][0][CC],
		rhs[i][j][0] );
	matvec_sub(lhs[i][j][k][AA],
		   rhs[i][j][k-1], rhs[i][j][k]);
	matmul_sub(lhs[i][j][k][AA],
		   lhs[i][j][k-1][CC],
		   lhs[i][j][k][BB]);
	binvcrhs( lhs[i][j][k][BB],
		  lhs[i][j][k][CC],
		  rhs[i][j][k] );
      matvec_sub(lhs[i][j][ksize][AA],
		 rhs[i][j][ksize-1], rhs[i][j][ksize]);
      matmul_sub(lhs[i][j][ksize][AA],
		 lhs[i][j][ksize-1][CC],
		 lhs[i][j][ksize][BB]);
      binvrhs( lhs[i][j][ksize][BB],
	       rhs[i][j][ksize] );
